<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cilicili.jz2.dao.HistoryMapper">

    <resultMap id="BaseResultMap" type="cilicili.jz2.pojo.History">
        <id column="history_id" property="historyId" />
        <result column="user_id" property="userId" />
        <result column="video_id" property="videoId" />
        <!--<result column="watch_time" property="watchTime" />-->
    </resultMap>
    <resultMap id="BaseResultMap1" type="cilicili.jz2.pojo.Video">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="upload_userid" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="upload_time" javaType="java.time.ZonedDateTime" jdbcType="TIMESTAMP" />
            <arg column="count_play" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="count_like" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="pic_url" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>


    <insert id="insert" parameterType="cilicili.jz2.pojo.History">
    insert into History (user_id,video_id)
    values (#{userId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}
      )
  </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from history
    where history_id = #{id,jdbcType=INTEGER}
  </delete>

    <select id="findById" resultMap="BaseResultMap">
    SELECT *
    FROM history
    WHERE history_id = #{id}
  </select>
    <select id="showhistorys" resultMap="BaseResultMap1">
    SELECT *
    FROM videos AS a
      JOIN
      (SELECT
         user_id,
         video_id
       FROM history) AS b
        ON a.id = b.video_id
    WHERE b.user_id = #{userId}
    ORDER BY a.id DESC
  </select>

    <select id="eq" resultMap="BaseResultMap">
    SELECT *
    FROM history
    WHERE user_id = #{userId} AND video_id = #{videoId}
    </select>


</mapper>
